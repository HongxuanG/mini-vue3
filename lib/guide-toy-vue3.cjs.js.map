{"version":3,"file":"guide-toy-vue3.cjs.js","sources":["../src/shared/index.ts","../src/reactivity/effect.ts","../src/reactivity/baseHandlers.ts","../src/reactivity/reactive.ts","../src/reactivity/ref.ts","../src/reactivity/computed.ts","../src/runtime-core/vnode.ts","../src/runtime-core/apiCreateApp.ts","../src/runtime-core/componentEmit.ts","../src/runtime-core/componentProps.ts","../src/runtime-core/componentPublicInstance.ts","../src/runtime-core/componentSlots.ts","../src/runtime-core/component.ts","../src/runtime-core/renderer.ts","../src/runtime-core/h.ts","../src/runtime-core/helper/renderSlot.ts","../src/runtime-core/apiInject.ts","../src/runtime-dom/index.ts"],"sourcesContent":["export * from './shapeFlags'\nexport const extend = Object.assign\n// 判断value是否object或者array\nexport const isObject = (value: unknown) => {\n  return value !== null && typeof value === 'object'\n}\nexport const isString = (value: unknown) => {\n  return typeof value === 'string'\n}\n// 类型保护\nexport const isFunction = (value: unknown): value is Function => {\n  return typeof value === 'function'\n}\nexport const isArray = Array.isArray\nexport const hasChanged = (newValue: any, value: any) => {\n  return !Object.is(newValue, value)\n}\nexport const isOn = (key: string) => /^on[A-Z]/.test(key)\nexport const hasOwn = (target: Record<string, any>, key: any) =>\n  Object.prototype.hasOwnProperty.call(target, key)\n\n// 把kabobCase => camelCase\nexport const camelCase = (str: string) => {\n  return str.replace(/-(\\w)/g, (_, $1: string) => {\n    return $1.toUpperCase()\n  })\n}\n// 首字母大写\nexport const capitalize = (str: string) => {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n// 事件前缀追加'on'\nexport const toHandlerKey = (eventName: string) => {\n  return eventName ? 'on' + capitalize(eventName) : ''\n}\nexport const EMPTY_OBJ = {}\n","import { extend } from '../shared'\r\n\r\nexport type EffectScheduler = (...args: any[]) => any\r\nexport type Dep = Set<ReactiveEffect>\r\nexport class ReactiveEffect {\r\n  public deps: Dep[] = []\r\n  public active = true // 该effect是否存活\r\n  public onStop?: () => void\r\n  constructor(public fn: Function, public scheduler?: EffectScheduler) {}\r\n  run() {\r\n    // 如果effect已经被杀死了，被删除了（stop()函数相关）\r\n    if (!this.active) {\r\n      return this.fn()\r\n    }\r\n    // 为什么要在这里把this赋值给activeEffect呢？因为这里是fn执行之前，就是track依赖收集执行之前，又是effect开始执行之后，\r\n    // this能捕捉到这个依赖，将这个依赖赋值给activeEffect是刚刚好的时机\r\n    activeEffect = this\r\n    shouldTrack = true // 把开关打开让他可以收集依赖\r\n    let returnValue = this.fn() // 执行fn的时候，fn里面会执行get操作，之后就会执行track收集依赖，因为shouldTrack是true，所以依赖收集完成\r\n    // 之后把shouldTrack关闭，这样就没办法在track函数里面收集依赖了\r\n    shouldTrack = false\r\n\r\n    return returnValue\r\n  }\r\n  stop() {\r\n    // 追加active 标识是为了性能优化，避免每次循环重复调用stop同一个依赖的时候\r\n    if (this.active) {\r\n      cleanupEffect(this)\r\n      this.onStop?.()\r\n      this.active = false\r\n    }\r\n  }\r\n}\r\n// 清除指定依赖\r\nfunction cleanupEffect(effect: ReactiveEffect) {\r\n  // 对effect解构，解出deps，减少对象在词法环境寻找属性的次数\r\n  const { deps } = effect\r\n  if (deps.length !== 0) {\r\n    for (let i = 0; i < deps.length; i++) {\r\n      deps[i].delete(effect)\r\n    }\r\n    deps.length = 0\r\n  }\r\n}\r\nconst targetMap = new Map<Record<EffectKey, any>, Map<EffectKey, Set<IDep>>>()\r\n// 当前正在执行的effect\r\nlet activeEffect: ReactiveEffect\r\nlet shouldTrack = false\r\ntype EffectKey = string\r\ntype IDep = ReactiveEffect\r\n// 这个track的实现逻辑很简单：添加依赖\r\nexport function track(target: Record<EffectKey, any>, key: EffectKey) {\r\n  // 这里为什么要多一层非空判断呢？\r\n  // 我们查看reactive.spec.ts里面的测试用例\r\n  // 测试用例里根本就没有调用effect()，所以没有执行ReactiveEffect的run()自然activeEffect也就是undefined了\r\n  // if (!activeEffect) return\r\n  // 应不应该收集依赖，从而避免删了依赖又重新添加新的依赖\r\n  // if (!shouldTrack) return\r\n  if (!isTracking()) return\r\n  // 寻找dep依赖的执行顺序\r\n  // target -> key -> dep\r\n  let depsMap = targetMap.get(target)\r\n  /**\r\n   * 这里有个疑问：target为{ num: 11 } 的时候我们能获取到depsMap，之后我们count.num++，为什么target为{ num: 12 } 的时候我们还能获取得到相同的depsMap呢？\r\n   * 这里我的理解是 targetMap的key存的只是target的引用 存的字符串就不一样了\r\n   */\r\n  // 解决初始化没有depsMap的情况\r\n  if (!depsMap) {\r\n    depsMap = new Map()\r\n    targetMap.set(target, depsMap)\r\n  }\r\n  // dep是一个Set对象，存放着这个key相对应的所有依赖\r\n  let dep = depsMap.get(key)\r\n  // 如果没有key相对应的Set 初始化Set\r\n  if (!dep) {\r\n    dep = new Set()\r\n    depsMap.set(key, dep)\r\n  }\r\n  trackEffect(dep)\r\n}\r\n// 依赖收集\r\nexport function trackEffect(dep: Dep) {\r\n  // 避免不必要的add操作\r\n  if (dep.has(activeEffect)) return\r\n  // 将activeEffect实例对象add给deps\r\n  dep.add(activeEffect)\r\n  // activeEffect的deps 接收 Set<ReactiveEffect>类型的deps\r\n  // 供删除依赖的时候使用(停止监听依赖)\r\n  activeEffect.deps.push(dep)\r\n}\r\nexport function isTracking() {\r\n  return activeEffect !== undefined && shouldTrack\r\n}\r\n// 这个trigger的实现逻辑很简单：找出target的key对应的所有依赖，并依次执行\r\nexport function trigger(target: Record<EffectKey, any>, key: EffectKey) {\r\n  const depsMap = targetMap.get(target)\r\n  const dep = depsMap?.get(key)\r\n  if (dep) {\r\n    triggerEffect(dep)\r\n  }\r\n}\r\n// 触发依赖\r\nexport function triggerEffect(dep: Dep) {\r\n  for (let effect of dep) {\r\n    if (effect.scheduler) {\r\n      effect.scheduler()\r\n    } else {\r\n      effect.run()\r\n    }\r\n  }\r\n}\r\nexport interface EffectOption {\r\n  scheduler?: EffectScheduler\r\n  onStop?: () => void\r\n}\r\n// 里面存有一个匿名函数\r\nexport interface EffectRunner<T = any> {\r\n  (): T\r\n  effect: ReactiveEffect\r\n}\r\n// 根据官方给出的介绍：effect会立即触发这个函数，同时响应式追踪其依赖\r\nexport function effect<T = any>(\r\n  fn: () => T,\r\n  option?: EffectOption\r\n): EffectRunner {\r\n  let _effect = new ReactiveEffect(fn)\r\n  if (option) {\r\n    extend(_effect, option)\r\n  }\r\n  _effect.run()\r\n  // 注意这里的this指向，return 出去的run方法，方法体里需要用到this，且this必须指向ReactiveEffect的实例对象\r\n  // 不用bind重新绑定this，this会指向undefined\r\n  let runner = _effect.run.bind(_effect) as EffectRunner\r\n  // 这里的effect挂载在了函数runner上，作为属性，这是利用了js中函数可以挂在属性的特性\r\n  // 之后呢，实现stop的时候runner就能拿到ReactiveEffect实例对象了\r\n  runner.effect = _effect\r\n  return runner\r\n}\r\n// 删除依赖\r\nexport function stop(runner: EffectRunner) {\r\n  runner.effect.stop()\r\n}\r\n","import { track, trigger } from './effect'\r\nimport { reactive, ReactiveFlags, readonly } from './reactive'\r\nimport { extend, isObject } from '../shared'\r\n// 此处调用一次createSetter和getter，为了不在每次使用mutableHandlers的时候重复调用\r\nconst get = createGetter()\r\nconst set = createSetter()\r\nconst readonlyGet = createGetter(true)\r\nconst shallowReadonlyGet = createGetter(true, true)\r\n// shallowReactive的get操作\r\nconst shallowGet = createGetter(false, true)\r\n// shallowReactive的set操作\r\nconst shallowSet = createSetter(true)\r\n\r\n// 高阶函数\r\nexport function createGetter<T extends object>(\r\n  isReadonly = false,\r\n  isShallow = false\r\n) {\r\n  return function get(target: T, key: string | symbol) {\r\n    // isReactive和isReadonly 都是根据传入的参数 `isReadonly`来决定是否返回true | false的\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (key === ReactiveFlags.IS_SHALLOW) {\r\n      return isShallow\r\n    } else if (key === ReactiveFlags.RAW) {\r\n      return target\r\n    }\r\n    let res = Reflect.get(target, key)\r\n\r\n    if (!isReadonly) {\r\n      // 判断是否readonly\r\n      // 依赖收集\r\n      track(target, key as string)\r\n    }\r\n    if (isShallow) {\r\n      return res\r\n    }\r\n    // 之前都是只实现表面一层的reactive，我们现在实现嵌套对象的reactive\r\n    if (isObject(res)) {\r\n      return isReadonly ? readonly(res) : reactive(res)\r\n    }\r\n    return res\r\n  }\r\n}\r\n// 这个isShallow涉及到的是shallowReactive\r\nexport function createSetter<T extends object>(isShallow = false) {\r\n  return function set(target: T, key: string | symbol, value: any) {\r\n    let success: boolean\r\n    success = Reflect.set(target, key, value)\r\n    // 触发依赖\r\n    trigger(target, key as string)\r\n    return success\r\n  }\r\n}\r\n\r\nexport const mutableHandlers: ProxyHandler<object> = {\r\n  get,\r\n  set,\r\n}\r\nexport const readonlyHandlers: ProxyHandler<object> = {\r\n  get: readonlyGet,\r\n  set(target, key, value) {\r\n    console.warn(\r\n      `${JSON.stringify(target)} do not set ${String(\r\n        key\r\n      )} value ${value}, because it is readonly`\r\n    )\r\n    return true\r\n  },\r\n}\r\nexport const shallowReadonlyHandlers: ProxyHandler<object> = extend(\r\n  {},\r\n  readonlyHandlers,\r\n  {\r\n    get: shallowReadonlyGet,\r\n  }\r\n)\r\nexport const shallowReactiveHandlers: ProxyHandler<object> = extend(\r\n  {},\r\n  mutableHandlers,\r\n  {\r\n    get: shallowGet,\r\n    set: shallowSet,\r\n  }\r\n)\r\nexport function createReactiveObject<T extends object>(\r\n  target: T,\r\n  handlers: ProxyHandler<T>\r\n) {\r\n  if (!isObject(target)) {\r\n    console.warn(`target ${target} is not a object`)\r\n    return target\r\n  }\r\n  return new Proxy(target, handlers)\r\n}\r\n","import {\r\n  createReactiveObject,\r\n  mutableHandlers,\r\n  readonlyHandlers,\r\n  shallowReadonlyHandlers,\r\n  shallowReactiveHandlers,\r\n} from './baseHandlers'\r\n\r\nexport enum ReactiveFlags {\r\n  IS_REACTIVE = '__v_isReactive',\r\n  IS_READONLY = '__v_isReadonly',\r\n  IS_SHALLOW = '__v_isShallow',\r\n  RAW = '__v_raw',\r\n}\r\n// 给value做类型批注，让value有以下几个可选属性,不然该死的value飘红 --isReactive函数和isReadonly函数  说的就是你们\r\nexport interface Target {\r\n  [ReactiveFlags.IS_REACTIVE]?: boolean\r\n  [ReactiveFlags.IS_READONLY]?: boolean\r\n  [ReactiveFlags.IS_SHALLOW]?: boolean\r\n  [ReactiveFlags.RAW]?: any\r\n}\r\n\r\nexport function reactive<T extends object>(target: T) {\r\n  return createReactiveObject<T>(target, mutableHandlers)\r\n}\r\n\r\n// 其实就是一个没有set操作的reactive（会深层readonly）\r\nexport function readonly<T extends object>(target: T) {\r\n  return createReactiveObject<T>(target, readonlyHandlers)\r\n}\r\n\r\n// 浅浅的readonly一下，创建一个 proxy，使其自身的 property 为只读，但不执行嵌套对象的深度只读转换 (暴露原始值)\r\nexport function shallowReadonly<T extends object>(target: T) {\r\n  return createReactiveObject<T>(target, shallowReadonlyHandlers)\r\n}\r\nexport function shallowReactive<T extends object>(target: T) {\r\n  return createReactiveObject<T>(target, shallowReactiveHandlers)\r\n}\r\n\r\nexport function isReactive(value: unknown) {\r\n  // target没有__v_isReactive这个属性，为什么还要写target['__v_isReactive']呢？因为这样就会触发proxy的get操作，\r\n  // 通过判断createGetter传入的参数isReadonly是否为true，否则isReactive为true\r\n  // 优化点：用enum管理状态，增强代码可读性\r\n  return !!(value as Target)[ReactiveFlags.IS_REACTIVE]\r\n}\r\n\r\nexport function isReadonly(value: unknown) {\r\n  // 同上\r\n  return !!(value as Target)[ReactiveFlags.IS_READONLY]\r\n}\r\n// 检查对象是否是由 reactive 或 readonly 创建的 proxy。\r\nexport function isProxy(value: unknown) {\r\n  return isReactive(value) || isReadonly(value)\r\n}\r\n// 检查对象是否 开启 shallow mode\r\nexport function isShallow(value: unknown) {\r\n  return !!(value as Target)[ReactiveFlags.IS_SHALLOW]\r\n}\r\n// 返回 reactive 或 readonly 代理的原始对象\r\nexport function toRaw<T>(observed: T): T {\r\n  // observed存在，触发get操作，在createGetter直接return target\r\n  const raw = observed && (observed as Target)[ReactiveFlags.RAW]\r\n  return raw ? toRaw(raw) : observed\r\n}\r\n","// 为什么要有ref呢，reactive不行吗？\r\n// 因为reactive用的是proxy，而proxy只能针对对象去监听数据变化，基本数据类型并不能用proxy\r\n// 所以我们想到了class里面的取值函数getter和存值函数getter，他们都能在数据变化的时候对数据加以操作。\r\nimport { hasChanged, isObject } from '../shared'\r\nimport { Dep } from './effect'\r\nimport { triggerEffect, trackEffect, isTracking } from './effect'\r\nimport { isReactive, reactive } from './reactive'\r\nexport interface Ref<T = any> {\r\n  value: T\r\n}\r\n// 定义一个RefImpl类\r\nclass RefImpl<T> {\r\n  private _value: T\r\n  private _rawValue: T\r\n  public dep?: Dep = undefined\r\n  public __v_isRef = true // 标识是ref对象\r\n  constructor(value: any) {\r\n    this._value = convert(value)\r\n    this._rawValue = value\r\n    this.dep = new Set()\r\n  }\r\n  get value() {\r\n    trackRefValue(this)\r\n    return this._value\r\n  }\r\n  set value(newValue: any) {\r\n    // 触发依赖\r\n\r\n    // 对比旧的值和新的值，如果相等就没必要触发依赖和赋值了，这也是性能优化的点\r\n    if (hasChanged(newValue, this._rawValue)) {\r\n      // 注意这里先赋值再触发依赖\r\n      this._value = convert(newValue)\r\n      this._rawValue = newValue\r\n      triggerEffect(this.dep as Dep)\r\n    }\r\n  }\r\n}\r\nfunction trackRefValue(ref: RefImpl<any>) {\r\n  // 有时候根本就没有调用effect()，也就是说activeEffect是undefined的情况\r\n  if (isTracking()) {\r\n    // 依赖收集\r\n    trackEffect(ref.dep as Dep)\r\n  }\r\n}\r\n// 判断value是否是对象，是：reactive ，否：基本数据类型，直接返回\r\nfunction convert(value: any) {\r\n  return isObject(value) ? reactive(value) : value\r\n}\r\nexport function ref<T>(value: T): Ref<T> {\r\n  return new RefImpl(value)\r\n}\r\n// 检查值是否为一个 ref 对象。\r\nexport function isRef(ref: any) {\r\n  return !!(ref && ref.__v_isRef)\r\n}\r\n// 如果参数是一个 ref，则返回内部值，否则返回参数本身。这是 val = isRef(val) ? val.value : val 的语法糖函数。\r\nexport function unref(ref: any) {\r\n  return isRef(ref) ? ref.value : ref\r\n}\r\n// 通常用在vue3 template里面ref取值，在template里面不需要.value就可以拿到ref的值\r\nexport function proxyRefs<T extends object>(obj: T) {\r\n  return isReactive(obj)\r\n    ? obj\r\n    : new Proxy<any>(obj, {\r\n        get(target, key) {\r\n          // unref已经处理了是否ref的情况所以我们不需要自己if处理，如果是，返回.value，如果不是，直接返回值\r\n          return unref(Reflect.get(target, key))\r\n        },\r\n        set(target, key, value) {\r\n          // 因为value为普通值类型的情况特殊，要把value赋值给ref的.value\r\n          if (isRef(target[key]) && !isRef(value)) {\r\n            target[key].value = value\r\n            return true\r\n          } else {\r\n            return Reflect.set(target, key, value)\r\n          }\r\n        },\r\n      })\r\n}\r\n","import { isFunction } from \"../shared\"\r\nimport { ReactiveEffect } from \"./effect\"\r\n\r\nexport class ComputedRefImpl<T> {\r\n  private _value!: T\r\n  private _dirty = true // 避免已经不是第一次执行get操作的时候再次调用compute\r\n  private _effect: ReactiveEffect // 进行依赖收集\r\n  constructor(\r\n    getter: ComputedGetter<T>,\r\n    private setter: ComputedSetter<T>\r\n  ) {\r\n    this._effect = new ReactiveEffect(getter, ()=>{\r\n      // 把dirty重新赋值为true\r\n      if(!this._dirty){\r\n        this._dirty = true\r\n      }\r\n    })\r\n  }\r\n  get value() {\r\n    // 如何给dirty重新赋值为true, 触发依赖,调用effect的scheduler()\r\n    if(this._dirty){\r\n      this._dirty = false\r\n      this._value = this._effect.run()\r\n    }\r\n    return this._value\r\n  }\r\n  set value(newValue: T) {\r\n    this.setter(newValue)\r\n  }\r\n}\r\n\r\nexport type ComputedGetter<T> = (...args: any[])=> T\r\n// v 是 赋值 = 右边的值\r\nexport type ComputedSetter<T> = (v: T) => void\r\nexport interface WritableComputedOptions<T> {\r\n  get: ComputedGetter<T>;\r\n  set: ComputedSetter<T>;\r\n}\r\n// 函数重载\r\nexport function computed<T>(option: WritableComputedOptions<T>): any\r\nexport function computed<T>(getter: ComputedGetter<T>): ComputedRefImpl<T>\r\n// 实现签名\r\nexport function computed<T>(getterOrOption: ComputedGetter<T> | WritableComputedOptions<T>) {\r\n  let getter: ComputedGetter<T>\r\n  let setter: ComputedSetter<T>\r\n  // 区分入参是getter还是option\r\n  if(isFunction(getterOrOption)){\r\n    getter = getterOrOption\r\n    setter = () => console.error('错误, 因为是getter只读, 不能赋值')\r\n  }else{\r\n    getter = getterOrOption.get\r\n    setter = getterOrOption.set\r\n  }\r\n  return new ComputedRefImpl(getter, setter)\r\n}\r\n","import { isArray, isObject, isString } from '../shared'\r\nimport { ShapeFlags } from '../shared/shapeFlags'\r\n\r\n// fragment用来创建一个碎片组件，这个碎片组件并不会真正的渲染出一个<Fragment></Fragment>\r\n// 他的作用就是渲染slots的时候摆脱div的包裹，让slots直接渲染在父组件上。\r\nexport const Fragment = Symbol('Fragment')\r\nexport const Text = Symbol('Text')\r\n\r\n// type是 <template></template>经过编译之后具有render()函数的对象，此外还有__file和__hmrId这些无关的属性\r\nexport function createVNode(type: any, props?: any, children?: any) {\r\n  const vnode = {\r\n    type,\r\n    props,\r\n    children,\r\n    shapeFlag: getShapeFlag(type),\r\n    el: null,\r\n  }\r\n  normalizeChildren(vnode, children)\r\n  return vnode\r\n}\r\n// 根据vnode.type标志vnode类型\r\nfunction getShapeFlag(type: any) {\r\n  return isString(type) \r\n    ? ShapeFlags.ELEMENT\r\n    : isObject(type)\r\n    ? ShapeFlags.STATEFUL_COMPONENT\r\n    : 0\r\n}\r\n// 给vnode.shapeFlag追加标识\r\nfunction normalizeChildren(vnode: any, children: any){\r\n  // | 左右两边为0 则为0   可以用于给二进制指定的位数修改成1  例如：0100 | 0001 = 0101\r\n  // 在这里相当于给vnode追加额外的标识\r\n  if(isString(children)){\r\n    vnode.shapeFlag |= ShapeFlags.TEXT_CHILDREN\r\n    // 子级是数组\r\n  } else if(isArray(children)){\r\n    vnode.shapeFlag |= ShapeFlags.ARRAY_CHILDREN\r\n  }\r\n  // vnode是组件\r\n  if(vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT){\r\n    // 子级是对象\r\n    if(isObject(children) ){\r\n      vnode.shapeFlag |= ShapeFlags.SLOTS_CHILDREN\r\n    }\r\n  }\r\n}\r\n// 创建文本虚拟节点 为什么需要创建文本虚拟节点？直接填上文本不行吗？h('div',{},[Foo, '我是文本'])\r\n// 挂载html的时候因为children是数组，必然经过mountChildren的循环，然后patch，单纯填上文本是没办法渲染出来的\r\n// 因为patch并没有针对纯文本做处理，你只能通过div（或者其他html元素）包裹起来生成一个vnode才行，像这样：h('div',{},[Foo, h('div',{}, '我是文本')])\r\nexport function createTextVNode(text: string){\r\n  return createVNode(Text, {}, text)\r\n}\r\n","import { createVNode } from './vnode'\r\n\r\nexport function createAppAPI(render: any) {\r\n  return function createApp(rootComponent: any) {\r\n    const mount = (rootContainer: any) => {\r\n      const vnode = createVNode(rootComponent)\r\n\r\n      render(vnode, rootContainer)\r\n    }\r\n    return {\r\n      mount,\r\n    }\r\n  }\r\n}\r\n","import { camelCase, toHandlerKey } from \"../shared\"\n\n// 触发父组件自定义事件就好像vue2的$emit\nexport function emit(instance: any, event: string, ...args: unknown[]){\n  const {props} = instance\n\n  \n  const eventName = toHandlerKey(camelCase(event))\n  console.log(eventName)\n  const handler = props[eventName]\n  handler && handler(...args)\n}\n","export function initProps(instance: any, rawProps: any) {\n  instance.props = rawProps || {}\n}\n","import { hasOwn } from '../shared'\n\nexport type PublicPropertiesMap = Record<string, (i: any) => any>\n// 实例property\nconst publicPropertiesMap: PublicPropertiesMap = {\n  $el: (i: any) => i.vnode.el,\n  $slots: (i: any) => i.slots\n}\n// render函数的this指向，将会指向setup的返回值\nexport const publicInstanceProxyHandlers: ProxyHandler<any> = {\n  get({ _: instance }, key: string) {\n    const { setupState, props } = instance\n    // 在setup的return中寻找key\n    if (hasOwn(setupState, key)) {\n      return setupState[key]\n      // 在setup的参数props中寻找key\n    } else if (hasOwn(props, key)) {\n      return props[key]\n    }\n    // 在publicPropertiesMap中寻找key，并调用，返回结果\n    const publicGetter = publicPropertiesMap[key]\n    if (publicGetter) {\n      return publicGetter(instance)\n    }\n  },\n}\n","import { isArray, ShapeFlags } from '../shared'\r\n// 如果children里面有slot，那么把slot挂载到instance上\r\nexport function initSlots(instance: any, children: any) {\r\n  const { vnode } = instance\r\n  if (vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    normalizeObjectSlots(instance.slots, children)\r\n  }\r\n}\r\n// 具名name作为instance.slots的属性名，属性值是vnode\r\nfunction normalizeObjectSlots(slots: any, children: any) {\r\n  console.log('slots children===>' ,children)\r\n  // 遍历对象\r\n  for (let key in children) {\r\n    const value = children[key]\r\n    slots[key] = (props: any) => normalizeSlotValue(value(props))\r\n    // slots[key] = normalizeSlotValue(value)\r\n  }\r\n  // slots = normalizeSlotValue(slots)\r\n}\r\nfunction normalizeVNodeSlots(slots: any, children: any){\r\n  \r\n}\r\n// 转成数组\r\nfunction normalizeSlotValue(value: any) {\r\n  return isArray(value) ? value : [value]\r\n}\r\n","import { proxyRefs } from '../reactivity'\r\nimport { shallowReadonly } from '../reactivity/reactive'\r\nimport { isFunction, isObject } from '../shared'\r\nimport { emit } from './componentEmit'\r\nimport { initProps } from './componentProps'\r\nimport { publicInstanceProxyHandlers } from './componentPublicInstance'\r\nimport { initSlots } from './componentSlots'\r\n\r\nexport type Data = Record<string, unknown>\r\n\r\nexport function createComponentInstance(vnode: any, parentComponent: any) {\r\n  console.log('createComponentInstance', parentComponent)\r\n  const type = vnode.type\r\n  const instance = {\r\n    vnode,\r\n    type,\r\n    render: null,\r\n    setupState: {},\r\n    props: {},\r\n    emit: () => {},\r\n    slots: {},\r\n    isMounted: false,\r\n    subTree: {},\r\n    provides: parentComponent ? parentComponent.provides : {} as Record<string, any>, // 确保中间层的组件没有提供provide时，子组件拿最近的有provide的组件的数据\r\n    parent: parentComponent, // 父组件的组件实例\r\n  }\r\n  instance.emit = emit.bind(null, instance) as any\r\n  return instance\r\n}\r\n//\r\nexport function setupComponent(instance: any) {\r\n  // 初始化组件外部传给组件的props\r\n  initProps(instance, instance.vnode.props)\r\n  initSlots(instance, instance.vnode.children)\r\n  setupStatefulComponent(instance)\r\n}\r\n// 初始化有状态的组件\r\nfunction setupStatefulComponent(instance: any) {\r\n  const Component = instance.type\r\n  // 解决render返回的h()函数里面this的问题，指向setup函数\r\n  instance.proxy = new Proxy({ _: instance } as Data, publicInstanceProxyHandlers)\r\n  const { setup } = Component\r\n  // 有时候用户并没有使用setup()\r\n  if (setup) {\r\n    // 处理setup的返回值，如果返回的是对象，那么把对象里面的值注入到template上下文中\r\n    // 如果是一个函数h()，那么直接render\r\n    setCurrentInstance(instance)\r\n    const setupResult = setup(shallowReadonly(instance.props), {\r\n      emit: instance.emit\r\n    })\r\n\r\n    handleSetupResult(instance, setupResult)\r\n    setCurrentInstance(null)\r\n  }\r\n  finishComponentSetup(instance)\r\n}\r\n// 处理组件的setup的返回值\r\nfunction handleSetupResult(instance: any, setupResult: any) {\r\n  // TODO handle function\r\n  if (isFunction(setupResult)) {\r\n    instance.render = setupResult\r\n  } else if (isObject(setupResult)) {\r\n    // 把setup返回的对象挂载到setupState上  proxyRefs对setupResult解包（在template上不必书写.value来获取ref值）\r\n    instance.setupState = proxyRefs(setupResult)\r\n  }\r\n}\r\n// 结束组件的安装\r\nfunction finishComponentSetup(instance: any) {\r\n  const Component = instance.type // 遇到h('div',{}, this.name)  这里Component将为'div'\r\n\r\n  if (instance) {\r\n    instance.render = Component.render\r\n  }\r\n}\r\nexport let currentInstance = null\r\nexport function getCurrentInstance(){\r\n  return currentInstance\r\n}\r\nfunction setCurrentInstance(instance: any){\r\n  currentInstance = instance\r\n}\r\n","import { effect } from '../reactivity'\r\nimport { ShapeFlags, EMPTY_OBJ } from '../shared'\r\nimport { createAppAPI } from './apiCreateApp'\r\nimport { createComponentInstance, setupComponent } from './component'\r\nimport { Fragment, Text } from './vnode'\r\n\r\ninterface RendererOptions {\r\n  createElement: (type: string) => any\r\n  patchProp: (el: any, key: string, oldValue: any, newValue: any) => void\r\n  insert: (el: any, container: any) => void\r\n  remove: (el: any) => void\r\n  setElementText: (el: any, text: string) => void\r\n}\r\n\r\nexport function createRenderer(options: RendererOptions) {\r\n  const {\r\n    createElement: hostCreateElement,\r\n    patchProp: hostPatchProp,\r\n    insert: hostInsert,\r\n    remove: hostRemove,\r\n    setElementText: hostSetElementText,\r\n  } = options\r\n\r\n  function render(vnode: any, container: any) {\r\n    // 做patch算法\r\n    patch(null, vnode, container, null)\r\n  }\r\n\r\n  // 例如：\r\n  /**\r\n   * template被编译成  {...., setup(){}, render(){}, ....}  这样一个特殊对象\r\n   * 或者{..., data, methods, render(){}, ...}\r\n   *\r\n   * 之后 这个特殊对象作为参数会传入 createVNode()  创建虚拟dom\r\n   */\r\n  // 传入vnode，递归对一个组件或者普通元素进行拆箱，在内部对vnode的type判断执行不同的处理函数\r\n  // n1是老的vnode，n2是新的vnode\r\n  function patch(n1: any, n2: any, container: any, parentComponent: any) {\r\n    // 检查是什么类型的vnode\r\n    const { type } = n2\r\n    switch (type) {\r\n      // 这里有个面试题就是：为什么vue2书写template的时候要一个根元素，而vue3不用根元素？\r\n      // 那是因为有fragment的原因：不再重新生成一个div去包裹template里的元素，而是直接patch children\r\n      case Fragment:\r\n        processFragment(n2, container, parentComponent)\r\n        break\r\n      case Text:\r\n        processText(n2, container)\r\n        break\r\n      default: {\r\n        // & 左右两边同时为1 则为1   可以应用在 0001 & 0010 判断指定的位置是否为1  这个案例会输出0000  所以为false 指定的位置并没有相同\r\n        if (n2.shapeFlag & ShapeFlags.ELEMENT) {\r\n          // 是一个普通元素？处理vnode是普通标签的情况\r\n          processElement(n1, n2, container, parentComponent)\r\n        } else if (n2.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n          // 是一个组件？处理vnode是组件的情况\r\n          processComponent(n2, container, parentComponent)\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n  function processText(n2: any, container: any) {\r\n    mountText(n2, container)\r\n  }\r\n  function processFragment(n2: any, container: any, parentComponent: any) {\r\n    mountChildren(n2.children, container, parentComponent)\r\n  }\r\n  // 处理组件的情况\r\n  function processComponent(vnode: any, container: any, parentComponent: any) {\r\n    mountComponent(vnode, container, parentComponent)\r\n  }\r\n  // 处理元素的情况\r\n  function processElement(\r\n    n1: any,\r\n    n2: any,\r\n    container: any,\r\n    parentComponent: any\r\n  ) {\r\n    if (!n1) {\r\n      mountElement(n2, container, parentComponent)\r\n    } else {\r\n      patchElement(n1, n2, container, parentComponent)\r\n    }\r\n  }\r\n  // 最后，它把setup()的返回值挂载在组件的instance的setupState上\r\n  // instance.type的render()函数挂载在组件的instance的render上\r\n  function mountComponent(vnode: any, container: any, parentComponent: any) {\r\n    const instance = createComponentInstance(vnode, parentComponent)\r\n    // 安装组件\r\n    setupComponent(instance)\r\n\r\n    // 对render函数进行依赖收集\r\n    setupRenderEffect(instance, vnode, container)\r\n  }\r\n  function mountElement(vnode: any, container: any, parentComponent: any) {\r\n    // 注意：这个vnode并非是组件的vnode，而是HTML元素的vnode\r\n    const el = (vnode.el = hostCreateElement(vnode.type) as HTMLElement)\r\n    let { children, props } = vnode\r\n    // 子节点是文本节点\r\n    if (vnode.shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n      el.textContent = children\r\n      // 子节点是数组\r\n    } else if (vnode.shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      mountChildren(vnode.children, el, parentComponent)\r\n    }\r\n    let val: any\r\n    // 对vnode的props进行处理，把虚拟属性添加到el\r\n    for (let key of Object.getOwnPropertyNames(props).values()) {\r\n      val = props[key]\r\n      hostPatchProp(el, key, null, val)\r\n    }\r\n    // insert操作\r\n    hostInsert(el, container)\r\n  }\r\n  // 对比element\r\n  function patchElement(\r\n    n1: any,\r\n    n2: any,\r\n    container: any,\r\n    parentComponent: any\r\n  ) {\r\n    console.log('patchElement')\r\n    const oldProps = n1.props || EMPTY_OBJ\r\n    const newProps = n2.props || EMPTY_OBJ\r\n    // 为什么这里n1的el对象要赋值给n2的el？\r\n    // 因为第一次挂载的时候调用patch，走的mountElement，内部给vnode的el赋值了\r\n    // 而往后的patch都不会走mountElement，而是走patchElement，内部并没有给新的vnode的el赋值，所以这里是属于补救的措施。\r\n    const el = (n2.el = n1.el)\r\n    patchChildren(n1, n2, el, parentComponent)\r\n    patchProps(el, oldProps, newProps)\r\n  }\r\n  function patchChildren(\r\n    n1: any,\r\n    n2: any,\r\n    container: any,\r\n    parentComponent: any\r\n  ) {\r\n    const prevShapeFlag = n1.shapeFlag\r\n    const newShapeFlag = n2.shapeFlag\r\n    const c1 = n1.children\r\n    const c2 = n2.children\r\n    if (newShapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        unmountChildren(container)\r\n      }\r\n      if (c1 !== c2) {\r\n        hostSetElementText(container, c2)\r\n      }\r\n    } else {\r\n      // text to array\r\n      if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        hostSetElementText(container, '')\r\n        mountChildren(c2, container, parentComponent)\r\n      } else {\r\n        console.log('array to array')\r\n        patchKeyedChildren(c1, c2,container,parentComponent)\r\n      }\r\n    }\r\n  }\r\n  function patchKeyedChildren(c1: any, c2: any,container:any,parentComponent:any) {\r\n    let i = 0\r\n    let e1 = c1.length - 1\r\n    let e2 = c2.length - 1\r\n    function isSameVNodeType(n1:any,n2:any){\r\n      return n1.type === n2.type && n1.key === n2.key\r\n    }\r\n    while(i <= e1 && i <= e2){\r\n      let n1 = c1[i]\r\n      let n2 = c2[i]\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(n1, n2, container, parentComponent)\r\n      } else {\r\n        break\r\n      }\r\n      i++\r\n    }\r\n    console.log(i);\r\n  }\r\n  function unmountChildren(child: any) {\r\n    for (let i = 0; i < child.length; i++) {\r\n      hostRemove(child[i])\r\n    }\r\n  }\r\n  // 对比props\r\n  function patchProps(el: any, oldProps: any, newProps: any) {\r\n    // 相同的props没必要比较\r\n    if (oldProps !== newProps) {\r\n      for (let key in newProps) {\r\n        const newProp = newProps[key]\r\n        const oldProp = oldProps[key]\r\n        if (newProp !== oldProp) {\r\n          hostPatchProp(el, key, oldProp, newProp)\r\n        }\r\n      }\r\n      // 老props是空对象就没必要循环\r\n      if (oldProps !== EMPTY_OBJ) {\r\n        for (let key in oldProps) {\r\n          // 新的props没有该属性\r\n          if (!(key in newProps)) {\r\n            hostPatchProp(el, key, oldProps[key], null)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  function mountText(vnode: any, container: any) {\r\n    const { children } = vnode\r\n    const textNode = (vnode.el = document.createTextNode(children))\r\n    container.append(textNode)\r\n  }\r\n  function mountChildren(children: any, container: any, parentComponent: any) {\r\n    children.forEach((vnode: any) => {\r\n      patch(null, vnode, container, parentComponent)\r\n    })\r\n  }\r\n  function setupRenderEffect(instance: any, vnode: any, container: any) {\r\n    effect(() => {\r\n      // 通过一个变量isMounted区分是初始化还是更新\r\n      if (!instance.isMounted) {\r\n        // 这个render()已经在finishComponentSetup处理过了，就是 instance.type.render() 特殊对象的render()\r\n        // render函数内部的this指向 修改为 setupStatefulComponent中定义的proxy对象\r\n        const subTree = instance.render.call(instance.proxy)\r\n        instance.subTree = subTree\r\n        // 对子树进行拆箱操作 递归进去\r\n        console.log('subTree===>', subTree)\r\n        patch(null, subTree, container, instance)\r\n        // 代码到了这里，组件内的所有element已经挂在到document里面了\r\n        vnode.el = subTree.el\r\n        instance.isMounted = true\r\n      } else {\r\n        console.log('updated')\r\n        const subTree = instance.render.call(instance.proxy)\r\n        const prevSubTree = instance.subTree\r\n        instance.subTree = subTree\r\n        patch(prevSubTree, subTree, container, instance)\r\n      }\r\n    })\r\n  }\r\n  return {\r\n    createApp: createAppAPI(render),\r\n    render,\r\n  }\r\n}\r\n","import { createVNode } from './vnode'\r\n\r\nexport function h(type: any, props?: any, children?: any) {\r\n  console.log('type===>', type)\r\n  return createVNode(type, props, children)\r\n}\r\n","import { createVNode, Fragment } from '../vnode'\r\n// slots已经在initSlots中做了处理（把slots挂载到instance.slots上）\r\nexport function renderSlot(slots: any, name: string = 'default', props: any) {\r\n  const slot = slots[name]\r\n  console.log('slot==>', slots, slot)\r\n  if (slot) {\r\n    if (typeof slot === 'function') {\r\n      // slots有可能是对象，数组\r\n      // 但是这里额外渲染了一层div，怎么去解决呢？定义一个vnode.type叫Fragment，内部只处理children\r\n      // 就好像走了processElement()逻辑一样，不用的是他不会给Fragment生成HTML元素节点\r\n      // return createVNode('div', {}, slot(props))\r\n      // 执行slot(props)会返回一个vnode数组\r\n      return createVNode(Fragment, {}, slot(props))\r\n      // return createVNode(Fragment, {}, slot)\r\n    }\r\n  } else {\r\n    return slots\r\n  }\r\n}\r\n","import { isFunction } from '../shared'\nimport { getCurrentInstance } from './component'\n// 跨组件数据共享\nexport function provide<T>(key: string | number, value: T){\n  // 提供者\n  // key和value存在哪呢？挂在instance的provides属性上吧！\n  \n  const currentInstance: any = getCurrentInstance()\n  if(currentInstance){\n    let { provides } = currentInstance\n    const parentProvides = currentInstance.parent?.provides\n    if(provides === parentProvides){\n      // 把provide原型指向父组件的provide\n      provides = currentInstance.provides = Object.create(parentProvides)\n    }\n    provides[key] = value\n  }\n}\nexport function inject<T>(key: string, defaultValue?: T){\n  // 接收者\n  // 在哪里拿value呢？在instance的parent上面获取到父组件的instance然后点出provide\n  const currentInstance: any = getCurrentInstance()\n  if(currentInstance){\n    const parentProvides = currentInstance.parent.provides\n\n    if (key in parentProvides){\n      return parentProvides[key]\n    }else{  // 找不到注入的\n      // 如果默认值是函数，执行函数\n      if (isFunction(defaultValue)) {\n        return defaultValue()\n      }\n      return defaultValue\n    }\n  }\n}\n","import { createRenderer } from '../runtime-core/renderer'\nimport { isFunction, isOn } from '../shared'\n\n// 创建元素\nexport function createElement(type: any) {\n  return document.createElement(type)\n}\n// 处理props\nexport function patchProp(el: any, key: string, oldValue: any, newValue: any) {\n  if (Array.isArray(newValue)) {\n    el.setAttribute(key, newValue.join(' '))\n  } else if (isOn(key) && isFunction(newValue)) {\n    // 添加事件\n    el.addEventListener(key.slice(2).toLowerCase(), newValue)\n  } else {\n    // props属性的属性值是undefined或者null，删除该属性\n    if (newValue === null || newValue === undefined) {\n      el.removeAttribute(key)\n    } else {\n      el.setAttribute(key, newValue)\n    }\n  }\n}\n// 插入元素\nexport function insert(el: any, container: any) {\n  container.append(el)\n}\n// 删除元素\nexport function remove(child: HTMLElement){\n  const parent = child.parentNode\n  if(parent){\n    parent.removeChild(child)\n  }\n}\n// 设置元素文本\nexport function setElementText(el:HTMLElement, text: string){\n  el.textContent = text\n}\n// 通过对以上函数的抽离，方便实现了自定义渲染器的逻辑\n// 以后想自定义渲染器，传入三个函数即可\nconst render = createRenderer({\n  createElement,\n  patchProp,\n  insert,\n  remove,\n  setElementText\n})\nexport function createApp(...args: any[]) {\n  // @ts-ignore\n  return render.createApp(...args)\n}\n// 因为runtime-core是更底层的实现，所以应该在runtime-dom里面导出，之后index.ts里面导出runtime-dom\nexport * from '../runtime-core'\n"],"names":["ReactiveFlags"],"mappings":"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"}